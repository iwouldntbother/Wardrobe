{"ast":null,"code":"var _jsxFileName = \"/Users/willwestwood/Documents/GitHub/Wardrobe/src/components/ClothingGrid.jsx\";\nimport './css/clothingGrid.css';\nimport { ReactComponent as JacketIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../icons/Jacket.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ClothingGrid({\n  size\n}) {\n  let x = Number(size.split('x')[0]); // let y = Number(size.split('x')[1])\n\n  let scale = String(100 / x); // let className = 'gridItem gix-'+{x}+' giy-'+{y}\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"clothingGrid\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gridItem\",\n      style: {\n        width: scale + 'vw',\n        height: scale + 'vw',\n        backgroundColor: randomColour()\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n} // function getIcon(iconName) {\n// }\n\n\n_c = ClothingGrid;\n\nlet randomColour = () => {\n  return '#' + Math.floor(Math.random() * 16777215).toString(16);\n};\n\nclass ClothingItem {\n  constructor(type, id, mainColour, subColours) {\n    this.type = type || '';\n    this.id = id || '';\n    this.mainColour = mainColour || '';\n    this.subColours = subColours || [];\n  }\n\n  addSubcolour(colour) {\n    this.subColours.append(String(colour));\n  }\n\n}\n\nlet TestItem = new ClothingItem('Shirt', null, '#256207', ['#459102', '#298037']);\nconsole.log(TestItem);\nexport default ClothingGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClothingGrid\");","map":{"version":3,"sources":["/Users/willwestwood/Documents/GitHub/Wardrobe/src/components/ClothingGrid.jsx"],"names":["ClothingGrid","size","x","Number","split","scale","String","width","height","backgroundColor","randomColour","Math","floor","random","toString","ClothingItem","constructor","type","id","mainColour","subColours","addSubcolour","colour","append","TestItem","console","log"],"mappings":";AAAA,OAAO,wBAAP;;;;AAGA,SAASA,YAAT,CAAsB;AAACC,EAAAA;AAAD,CAAtB,EAA8B;AAE5B,MAAIC,CAAC,GAAGC,MAAM,CAACF,IAAI,CAACG,KAAL,CAAW,GAAX,EAAgB,CAAhB,CAAD,CAAd,CAF4B,CAG5B;;AAEA,MAAIC,KAAK,GAAGC,MAAM,CAAC,MAAMJ,CAAP,CAAlB,CAL4B,CAO5B;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,2BAEE;AAAK,MAAA,SAAS,EAAC,UAAf;AACK,MAAA,KAAK,EAAE;AACLK,QAAAA,KAAK,EAAEF,KAAK,GAAC,IADR;AAELG,QAAAA,MAAM,EAAEH,KAAK,GAAC,IAFT;AAGLI,QAAAA,eAAe,EAAEC,YAAY;AAHxB;AADZ;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,C,CAED;AAEA;;;KAzBSV,Y;;AA2BT,IAAIU,YAAY,GAAG,MAAM;AACvB,SAAO,MAAIC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,QAAzB,EAAmCC,QAAnC,CAA4C,EAA5C,CAAX;AACD,CAFD;;AAIA,MAAMC,YAAN,CAAmB;AACjBC,EAAAA,WAAW,CAACC,IAAD,EAAOC,EAAP,EAAWC,UAAX,EAAuBC,UAAvB,EAAmC;AAC5C,SAAKH,IAAL,GAAYA,IAAI,IAAI,EAApB;AACA,SAAKC,EAAL,GAAUA,EAAE,IAAI,EAAhB;AACA,SAAKC,UAAL,GAAkBA,UAAU,IAAI,EAAhC;AACA,SAAKC,UAAL,GAAkBA,UAAU,IAAI,EAAhC;AACD;;AAEDC,EAAAA,YAAY,CAACC,MAAD,EAAS;AACnB,SAAKF,UAAL,CAAgBG,MAAhB,CAAuBjB,MAAM,CAACgB,MAAD,CAA7B;AACD;;AAVgB;;AAcnB,IAAIE,QAAQ,GAAG,IAAIT,YAAJ,CAAiB,OAAjB,EAA0B,IAA1B,EAAgC,SAAhC,EAA2C,CAAC,SAAD,EAAY,SAAZ,CAA3C,CAAf;AAEAU,OAAO,CAACC,GAAR,CAAYF,QAAZ;AAEA,eAAexB,YAAf","sourcesContent":["import './css/clothingGrid.css';\nimport {ReactComponent as JacketIcon} from '../icons/Jacket.svg'\n\nfunction ClothingGrid({size}) {\n\n  let x = Number(size.split('x')[0])\n  // let y = Number(size.split('x')[1])\n\n  let scale = String(100 / x)\n\n  // let className = 'gridItem gix-'+{x}+' giy-'+{y}\n\n  return (\n    <div className='clothingGrid'>\n\n      <div className='gridItem'\n           style={{\n             width: scale+'vw',\n             height: scale+'vw',\n             backgroundColor: randomColour()}}>\n        {/* <JacketIcon /> */}\n      </div>\n    </div>\n  )\n}\n\n// function getIcon(iconName) {\n\n// }\n\nlet randomColour = () => {\n  return '#'+Math.floor(Math.random()*16777215).toString(16);\n}\n\nclass ClothingItem {\n  constructor(type, id, mainColour, subColours) {\n    this.type = type || '';\n    this.id = id || '';\n    this.mainColour = mainColour || '';\n    this.subColours = subColours || [];\n  }\n\n  addSubcolour(colour) {\n    this.subColours.append(String(colour))\n  }\n\n}\n\nlet TestItem = new ClothingItem('Shirt', null, '#256207', ['#459102', '#298037'])\n\nconsole.log(TestItem);\n\nexport default ClothingGrid;"]},"metadata":{},"sourceType":"module"}